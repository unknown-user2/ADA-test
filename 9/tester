#include<stdio.h>
#include<stdlib.h>

int graph[100][100],visited[100],path[100];
int iscyclic;

int stack[100],top=-1;

void dfs(int n,int start)
{
	visited[start]=1;
	
	path[start]=1;
	for(int i=0;i<n;i++)
	{
		if(graph[start][i]&&visited[i]&&path[i])
			iscyclic=1;
			
		if(graph[start][i]&&visited[i]==0)
			dfs(n,i);
	}
	path[start]=0;
	stack[++top]=start;
}

int main()
{
	int n;
	iscyclic=0;
	
	printf("Enter the no. of elements: ");
	scanf("%d",&n);
	
	printf("\nEnter the adjacency matrix: \n");
	for(int i=0;i<n;i++)
	{
		for(int j=0;j<n;j++)
		{
			scanf("%d",&graph[i][j]);
		}
		visited[i]=0;
	}
	
	printf("\nAdjacency matrix: \n");
	for(int i=0;i<n;i++)
	{
		for(int j=0;j<n;j++)
		{
			printf("%d ",graph[i][j]);
		}
		printf("\n");
	}
	
	printf("\nTopological Ordering: \n");
	for(int i=0;i<n;i++)
	{
		if(visited[i]==0)
			dfs(n,i);
	}
	

	if(iscyclic)
		printf("\nThe graph is cyclic!\nNo topological order!\n");
	else
	{
		for(int i=0;i<n;i++)
			printf("-->%c",stack[i]+65);
	}	
	printf("\n");
	return 0;
}
