#include<stdio.h>
#include<stdlib.h>
int count,count2;

int max(int a,int b)
{
	int temp=(a>b)?a:b;
	return temp;
}

void swap(int *a,int *b)
{
	int temp=*a;
	*a=*b;
	*b=temp;
	return;
}

void heapify(int *heap,int n,int root)
{
	int largest=root;
	int left=2*root+1;
	int right=2*root+2;
	
	if(left<n)
	{
		count++;
		if(heap[left]>heap[largest])
			largest=left;
	}
	
	if(right<n)
	{
		count++;
		if(heap[right]>heap[largest])
			largest=right;
	}
	
	if(largest!=root)
	{
		swap(&heap[largest],&heap[root]);
		heapify(heap,n,largest);
	}
	
}

void heapsort(int *heap,int n)
{
	for(int i=(n/2)-1;i>=0;i--)
		heapify(heap,n,i);
		
	count2=count;
	count=0;
	
	for(int i=n-1;i>=0;i--)
	{
		swap(&heap[0],&heap[i]);
		heapify(heap,i,0);
	}
}

void plotter()
{
	FILE *fp1,*fp2,*fp3;
	fp1=fopen("heap_best.txt","a");
	fp2=fopen("heap_avg.txt","a");
	fp3=fopen("heap_worst.txt","a");
	int n=100;
	while(n<=1000)
	{
		int arr[n];
		
		//Best
		for(int i=0;i<n;i++)
			arr[i]=n-i+1;
		count=0;
		heapsort(arr,n);
		count=max(count,count2);
		fprintf(fp1,"%d\t%d\n",n,count);
			
		//Worst
		for(int i=0;i<n;i++)
			arr[i]=i+1;
		count=0;
		heapsort(arr,n);
		count=max(count,count2);
		fprintf(fp3,"%d\t%d\n",n,count);	
		
		//Average
		for(int i=0;i<n;i++)
			arr[i]=rand()%n;
		count=0;
		heapsort(arr,n);
		count=max(count,count2);
		fprintf(fp2,"%d\t%d\n",n,count);
		
		n+=100;	
	}
	fclose(fp1);
	fclose(fp2);
	fclose(fp3);
}
int main()
{	
	plotter();
	return 0;
}
