#include<stdio.h>
#include<stdlib.h>
#include<time.h>

int count;

void swap(int *a,int *b)
{
	int temp=*a;
	*a=*b;
	*b=temp;
	
}

int partition(int *arr,int beg,int end)
{
	int i,j,k;
	int p=arr[beg];
	i=beg;
	j=end+1;
	do
	{
		do
		{
			count++;
			i++;
		}while(arr[i]<p);
		
		do
		{
			count++;
			j--;
		}while(arr[j]>p);
		
		swap(&arr[i],&arr[j]);
		
	}while(i<j);
	
	swap(&arr[i],&arr[j]);
	swap(&arr[beg],&arr[j]);
	
	return j;
}

void quicksort(int *arr,int beg,int end)
{
	if(beg<end)
	{
		int split=partition(arr,beg,end);
		quicksort(arr,beg,split-1);
		quicksort(arr,split+1,end);
	}
}

void plotter()
{
	srand(time(NULL));
	int *arr;
	FILE *fp1,*fp2,*fp3;
	
	fp1=fopen("quick_best.txt","a");
	fp2=fopen("quick_avg.txt","a");
	fp3=fopen("quick_worst.txt","a");
	
	int n=4;
	while(n<1034)
	{	
		arr=(int*)malloc(n*sizeof(int));
		
		//Best
		for(int i=0;i<n;i++)
			arr[i]=3;
		count=0;
		quicksort(arr,0,n-1);
		fprintf(fp1,"%d\t%d\n",n,count);
		
		//Worst
		for(int i=0;i<n;i++)
			arr[i]=i+1;
		count=0;
		quicksort(arr,0,n-1);
		fprintf(fp3,"%d\t%d\n",n,count);
		
		//Average
		for(int i=0;i<n;i++)
			arr[i]=rand()%n;
		count=0;
		quicksort(arr,0,n-1);
		fprintf(fp2,"%d\t%d\n",n,count);
		
		n*=2;
	}
	free(arr);
	fclose(fp1);
	fclose(fp2);
	fclose(fp3);
}

int main()
{
	plotter();
	return 0;
}
